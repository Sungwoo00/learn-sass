@use 'sass:meta';
@use 'sass:math';
@use 'sass:map';

$nothing: null;
$num: 101;
$unit: 180px;
$pretendard: Pretendard;
$spoqa: 'Spoqa Han Sans Neo';
$hex: #f94e07;
$keyword: purple;
$color-function: hsl(18, 95%, 50%);
$yes: true;
$no: false;
$units: 20px 10px 0;
$font-families: Pretendard, Helvetica, sans-serif;
$square-bracket: [Verdana sans-serif];
$theme: (
  light: (
    forground: #121916,
    background: #e7e6e7,
  ),
  dark: (
    background: #121916,
    forground: #e7e6e7,
  ),
);
@function getUnit($value) {
  @return math.unit($value);
}

$value-1: 10px;
$value-2: 5;

.container {
  animation-delay: 9s + 21s;
  // width: $value-1 + $value-2;
  // block-size: calc($value-1 + $value-2);
  // inline-size: $value-1 * $value-2;
  width: math.div($value-1, $value-2);
}

// @debug $value-1 * $value-2;
// @debug 'Helvetica' + ' ' + 'Neue';

$word1: 'Helvetica';
$word2: 'Neue';
$word3: sans;
$word4: serif;

@debug (5px 7px 10px) != (5px, 7px, 10px);

// 단위 제거 함수
@function removeUnit($value) {
  @return math.div($value, ($value * 0 + 1));
}

@function rem($unit, $base: 16) {
  @return math.div(removeUnit($unit), $base) * 1rem;
}

@function em($unit, $base) {
  @return math.div(removeUnit($unit), $base) * 1em;
}

.box {
  font-family: '#{$word1 $word2}', #{$word3 - $word4};
  line-height: em(24px, 12);
}

// @debug calc(400px + 10%); // calc(400px + 10%)
// @debug calc(400px / 2); // 200px
// @debug min(100px, calc(1rem + 10%)); // min(100px, 1rem + 10%)
// @debug getUnit(10);
// @debug getUnit(20px);
// @debug getUnit(30%);
// @debug meta.type-of($theme);
// @debug meta.type-of($nothing);
// @debug meta.type-of($num);
// @debug meta.type-of($unit);
// @debug meta.type-of($pretendard);
// @debug meta.type-of($spoqa);
// @debug meta.type-of($hex);
// @debug meta.type-of($keyword);
// @debug meta.type-of($color-function);
// @debug meta.type-of($yes);
// @debug meta.type-of($no);
// @debug meta.type-of($units);
// @debug meta.type-of($font-families);
// @debug meta.type-of($square-bracket);
